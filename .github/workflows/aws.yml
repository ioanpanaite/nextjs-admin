name: Deploy to Amazon ECS

on:
  push:
    branches: 
      - main

env:
  AWS_REGION: eu-west-2
  ECR_REPOSITORY: nom-admin
  ECS_SERVICE: nomadmin-service
  ECS_CLUSTER: nomadmin                 
  ECS_TASK_DEFINITION: nomadminapp-task
  CONTAINER_NAME: nomadmin-container

permissions:
  contents: read

jobs:
  deploy:
    name: Build and Deploy to ECS
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Download task definition
      run: |
          aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_DEFINITION }} --query taskDefinition > task-definition-nomadmin.json

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        AWS_REGION: ${{ env.AWS_REGION }}
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
        AWS_BUCKET_ACCESS_KEY_ID: ${{ secrets.AWS_BUCKET_ACCESS_KEY_ID }}
        AWS_BUCKET_SECRET_ACCESS_KEY: ${{ secrets.AWS_BUCKET_SECRET_ACCESS_KEY }}
        AWS_ASSET_BUCKET: ${{ secrets.AWS_ASSET_BUCKET }}
        SENDGRID_API_KEY: ${{ secrets.SENDGRID_API_KEY }}
        SENDGRID_INVITE_TEAM_EMAIL: ${{ secrets.SENDGRID_INVITE_TEAM_EMAIL }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build --build-arg NEXTAUTH_SECRET=$NEXTAUTH_SECRET --build-arg NEXTAUTH_URL=$NEXTAUTH_URL --build-arg AWS_MONGODB_URI=$MONGODB_URI --build-arg AWS_BUCKET_ACCESS_KEY_ID=$AWS_BUCKET_ACCESS_KEY_ID --build-arg AWS_BUCKET_SECRET_ACCESS_KEY=$AWS_BUCKET_SECRET_ACCESS_KEY --build-arg AWS_ASSET_BUCKET=$AWS_ASSET_BUCKET --build-arg AWS_REGION=$AWS_REGION --build-arg SENDGRID_API_KEY=$SENDGRID_API_KEY --build-arg SENDGRID_INVITE_TEAM_EMAIL=$SENDGRID_INVITE_TEAM_EMAIL -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      env: 
        MONGODB_URI: ${{ secrets.MONGODB_URI }}
      with:
        task-definition: task-definition-nomadmin.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true
